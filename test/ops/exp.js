'use strict';
import * as utils from '../utils.js';

describe('test exp', function() {
  const context = navigator.ml.createContext();
  async function testExp(input, expected, shape) {
    const builder = new MLGraphBuilder(context);
    const x = builder.input('x', {type: 'float32', dimensions: shape});
    const y = builder.exp(x);
    const graph = await builder.build({y});
    const inputs = {'x': {data: new Float32Array(input)}};
    const outputs = await graph.compute(inputs);
    utils.checkShape(outputs.y.dimensions, shape);
    utils.checkValue(outputs.y.data, expected);
  }
  it('exp 1d', async function() {
    await testExp([-1, 0, 1], [0.36787945, 1., 2.71828175], [3]);
  });

  it('exp 3d', async function() {
    await testExp(
        [
          0.3143407,   0.03632548,  0.5354084,   -0.5000897,  1.2028517,
          -1.2581364,  -1.5108215,  -1.2340564,  1.3860914,   -0.2944251,
          -1.5065757,  -0.4673513,  0.56616277,  0.77866685,  -0.01097398,
          1.0758846,   0.6035437,   0.36806744,  0.03906458,  -0.54385495,
          0.10609569,  -0.40644982, -1.2890846,  1.3825086,   0.51489764,
          1.6407244,   -0.67886734, -0.6556329,  1.0399923,   0.1484657,
          1.011217,    0.8451463,   0.75473833,  -2.0161264,  1.6406634,
          -0.01692923, -0.7986609,  0.97758174,  0.893054,    -0.01632686,
          -1.9721986,  -0.75843745, 0.42327842,  -0.08648382, -1.3960054,
          0.7547995,   -0.42002508, -1.784105,   1.0171342,   0.3634587,
          0.4158588,   -1.0103701,  -0.23202766, 0.6390487,   -0.22796124,
          0.11259284,  0.3690759,   -0.18703128, 0.07711394,  2.9116163,
        ],
        [
          1.3693562,  1.0369933,  1.7081455,  0.60647625, 3.329598,
          0.28418314, 0.22072858, 0.29110932, 3.999188,   0.7449597,
          0.22166772, 0.6266599,  1.7614948,  2.1785662,  0.98908603,
          2.9325857,  1.8285872,  1.4449395,  1.0398376,  0.58050615,
          1.1119282,  0.6660105,  0.2755229,  3.984886,   1.6734672,
          5.1589055,  0.5071911,  0.5191134,  2.829195,   1.160053,
          2.7489443,  2.3283184,  2.127055,   0.13317032, 5.1585903,
          0.9832132,  0.4499311,  2.6580205,  2.442578,   0.9838057,
          0.13915059, 0.46839777, 1.5269594,  0.9171504,  0.24758399,
          2.1271849,  0.6570303,  0.1679473,  2.7652586,  1.4382954,
          1.5156718,  0.36408418, 0.79292417, 1.8946776,  0.79615515,
          1.1191761,  1.4463972,  0.8294177,  1.0801651,  18.386492,
        ],
        [3, 4, 5]);
  });
});
